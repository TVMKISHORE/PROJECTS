library(dplyr)
library(tidyr)
library(caTools)

setwd("D:/Kaggle/Santander")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
samplesub <- read.csv("sample_submission.csv")
train_1 <- train %>% filter(target==1)
train_0 <- train %>% filter(target==0)
train_1$target <- as.factor(train_1$target)
train_0$target <- as.factor(train_0$target)


train_data <- rbind(sample_n(train_0,size=20098,replace = FALSE),train_1)
dim(train_data)

length(intersect(train$ID_code,test$ID_code)) # no intersecting IDs
table(tn[c(1,3:202)]==tst) #only target variable is excluded in test-set


#split train test
spl=sample.split(train_data,SplitRatio=0.7)
c.train <- subset(train_data,spl=TRUE)
c.test <- subset(train_data,spl=FALSE)


#install JDK
#http://www.oracle.com/technetwork/java/javase/downloads/jdk10-downloads-4416644.html

install.packages("h2o")
library(h2o)


localH2O <- h2o.init(nthreads = -1)

h2o.init()


#data to h2o cluster
train.h2o <- as.h2o(c.train)
test.h2o <- as.h2o(c.test)
final_test.h20 <- as.h2o(test[2:201])


#dependent variable (Purchase)
y.dep <- 2
x.indep <- c(3:202)


#Random Fores
system.time(rforest.model <- h2o.randomForest(y=y.dep, x=x.indep, training_frame = train.h2o, ntrees = 1000, mtries = 3, max_depth = 4, seed = 1122))



h2o.performance(rforest.model)
h2o.varimp(rforest.model)
finalsubmit = h2o.predict(object = rforest.model, newdata =final_test.h20 )

h2o.downloadCSV(finalsubmit,'finalsubmit.csv')
submit_target <- read.csv("finalsubmit.csv")

submit <- data.frame(test$ID_code, submit_target$predict )

#submit$submit_ID <- test$ID_code
#submit$predict <- submit_target$predict
names(submit) <- names(samplesub)

write.csv(submit,"submit.csv",row.names = FALSE)
