.mode csv
.import 'D:\Kaggle\HCDR\all\application_test.csv' test 
.schema test
CREATE TABLE test_tb(
  "SK_ID_CURR" NUMBER,
  "NAME_CONTRACT_TYPE" NUMBER,
  "CODE_GENDER" NUMBER,
  "FLAG_OWN_CAR" NUMBER,
  "FLAG_OWN_REALTY" NUMBER,
  "CNT_CHILDREN" NUMBER,
  "AMT_INCOME_TOTAL" NUMBER,
  "AMT_CREDIT" NUMBER,
  "AMT_ANNUITY" NUMBER,
  "AMT_GOODS_PRICE" NUMBER,
  "NAME_TYPE_SUITE" NUMBER,
  "NAME_INCOME_TYPE" NUMBER,
  "NAME_EDUCATION_TYPE" NUMBER,
  "NAME_FAMILY_STATUS" NUMBER,
  "NAME_HOUSING_TYPE" NUMBER,
  "REGION_POPULATION_RELATIVE" NUMBER,
  "DAYS_BIRTH" NUMBER,
  "DAYS_EMPLOYED" NUMBER,
  "DAYS_REGISTRATION" NUMBER,
  "DAYS_ID_PUBLISH" NUMBER,
  "OWN_CAR_AGE" NUMBER,
  "FLAG_MOBIL" NUMBER,
  "FLAG_EMP_PHONE" NUMBER,
  "FLAG_WORK_PHONE" NUMBER,
  "FLAG_CONT_MOBILE" NUMBER,
  "FLAG_PHONE" NUMBER,
  "FLAG_EMAIL" NUMBER,
  "OCCUPATION_TYPE" NUMBER,
  "CNT_FAM_MEMBERS" NUMBER,
  "REGION_RATING_CLIENT" NUMBER,
  "REGION_RATING_CLIENT_W_CITY" NUMBER,
  "WEEKDAY_APPR_PROCESS_START" NUMBER,
  "HOUR_APPR_PROCESS_START" NUMBER,
  "REG_REGION_NOT_LIVE_REGION" NUMBER,
  "REG_REGION_NOT_WORK_REGION" NUMBER,
  "LIVE_REGION_NOT_WORK_REGION" NUMBER,
  "REG_CITY_NOT_LIVE_CITY" NUMBER,
  "REG_CITY_NOT_WORK_CITY" NUMBER,
  "LIVE_CITY_NOT_WORK_CITY" NUMBER,
  "ORGANIZATION_TYPE" NUMBER,
  "EXT_SOURCE_1" NUMBER,
  "EXT_SOURCE_2" NUMBER,
  "EXT_SOURCE_3" NUMBER,
  "APARTMENTS_AVG" NUMBER,
  "BASEMENTAREA_AVG" NUMBER,
  "YEARS_BEGINEXPLUATATION_AVG" NUMBER,
  "YEARS_BUILD_AVG" NUMBER,
  "COMMONAREA_AVG" NUMBER,
  "ELEVATORS_AVG" NUMBER,
  "ENTRANCES_AVG" NUMBER,
  "FLOORSMAX_AVG" NUMBER,
  "FLOORSMIN_AVG" NUMBER,
  "LANDAREA_AVG" NUMBER,
  "LIVINGAPARTMENTS_AVG" NUMBER,
  "LIVINGAREA_AVG" NUMBER,
  "NONLIVINGAPARTMENTS_AVG" NUMBER,
  "NONLIVINGAREA_AVG" NUMBER,
  "APARTMENTS_MODE" NUMBER,
  "BASEMENTAREA_MODE" NUMBER,
  "YEARS_BEGINEXPLUATATION_MODE" NUMBER,
  "YEARS_BUILD_MODE" NUMBER,
  "COMMONAREA_MODE" NUMBER,
  "ELEVATORS_MODE" NUMBER,
  "ENTRANCES_MODE" NUMBER,
  "FLOORSMAX_MODE" NUMBER,
  "FLOORSMIN_MODE" NUMBER,
  "LANDAREA_MODE" NUMBER,
  "LIVINGAPARTMENTS_MODE" NUMBER,
  "LIVINGAREA_MODE" NUMBER,
  "NONLIVINGAPARTMENTS_MODE" NUMBER,
  "NONLIVINGAREA_MODE" NUMBER,
  "APARTMENTS_MEDI" NUMBER,
  "BASEMENTAREA_MEDI" NUMBER,
  "YEARS_BEGINEXPLUATATION_MEDI" NUMBER,
  "YEARS_BUILD_MEDI" NUMBER,
  "COMMONAREA_MEDI" NUMBER,
  "ELEVATORS_MEDI" NUMBER,
  "ENTRANCES_MEDI" NUMBER,
  "FLOORSMAX_MEDI" NUMBER,
  "FLOORSMIN_MEDI" NUMBER,
  "LANDAREA_MEDI" NUMBER,
  "LIVINGAPARTMENTS_MEDI" NUMBER,
  "LIVINGAREA_MEDI" NUMBER,
  "NONLIVINGAPARTMENTS_MEDI" NUMBER,
  "NONLIVINGAREA_MEDI" NUMBER,
  "FONDKAPREMONT_MODE" NUMBER,
  "HOUSETYPE_MODE" NUMBER,
  "TOTALAREA_MODE" NUMBER,
  "WALLSMATERIAL_MODE" NUMBER,
  "EMERGENCYSTATE_MODE" NUMBER,
  "OBS_30_CNT_SOCIAL_CIRCLE" NUMBER,
  "DEF_30_CNT_SOCIAL_CIRCLE" NUMBER,
  "OBS_60_CNT_SOCIAL_CIRCLE" NUMBER,
  "DEF_60_CNT_SOCIAL_CIRCLE" NUMBER,
  "DAYS_LAST_PHONE_CHANGE" NUMBER,
  "FLAG_DOCUMENT_2" NUMBER,
  "FLAG_DOCUMENT_3" NUMBER,
  "FLAG_DOCUMENT_4" NUMBER,
  "FLAG_DOCUMENT_5" NUMBER,
  "FLAG_DOCUMENT_6" NUMBER,
  "FLAG_DOCUMENT_7" NUMBER,
  "FLAG_DOCUMENT_8" NUMBER,
  "FLAG_DOCUMENT_9" NUMBER,
  "FLAG_DOCUMENT_10" NUMBER,
  "FLAG_DOCUMENT_11" NUMBER,
  "FLAG_DOCUMENT_12" NUMBER,
  "FLAG_DOCUMENT_13" NUMBER,
  "FLAG_DOCUMENT_14" NUMBER,
  "FLAG_DOCUMENT_15" NUMBER,
  "FLAG_DOCUMENT_16" NUMBER,
  "FLAG_DOCUMENT_17" NUMBER,
  "FLAG_DOCUMENT_18" NUMBER,
  "FLAG_DOCUMENT_19" NUMBER,
  "FLAG_DOCUMENT_20" NUMBER,
  "FLAG_DOCUMENT_21" NUMBER,
  "AMT_REQ_CREDIT_BUREAU_HOUR" NUMBER,
  "AMT_REQ_CREDIT_BUREAU_DAY" NUMBER,
  "AMT_REQ_CREDIT_BUREAU_WEEK" NUMBER,
  "AMT_REQ_CREDIT_BUREAU_MON" NUMBER,
  "AMT_REQ_CREDIT_BUREAU_QRT" NUMBER,
  "AMT_REQ_CREDIT_BUREAU_YEAR" NUMBER
);
insert into test_tb  select * from test;
---------------------------------------
.import 'D:\Kaggle\HCDR\all\application_test.csv' train
CREATE TABLE train_tb(
  "SK_ID_CURR" NUMBER,
  "NAME_CONTRACT_TYPE" NUMBER,
  "CODE_GENDER" NUMBER,
  "FLAG_OWN_CAR" NUMBER,
  "FLAG_OWN_REALTY" NUMBER,
  "CNT_CHILDREN" NUMBER,
  "AMT_INCOME_TOTAL" NUMBER,
  "AMT_CREDIT" NUMBER,
  "AMT_ANNUITY" NUMBER,
  "AMT_GOODS_PRICE" NUMBER,
  "NAME_TYPE_SUITE" NUMBER,
  "NAME_INCOME_TYPE" NUMBER,
  "NAME_EDUCATION_TYPE" NUMBER,
  "NAME_FAMILY_STATUS" NUMBER,
  "NAME_HOUSING_TYPE" NUMBER,
  "REGION_POPULATION_RELATIVE" NUMBER,
  "DAYS_BIRTH" NUMBER,
  "DAYS_EMPLOYED" NUMBER,
  "DAYS_REGISTRATION" NUMBER,
  "DAYS_ID_PUBLISH" NUMBER,
  "OWN_CAR_AGE" NUMBER,
  "FLAG_MOBIL" NUMBER,
  "FLAG_EMP_PHONE" NUMBER,
  "FLAG_WORK_PHONE" NUMBER,
  "FLAG_CONT_MOBILE" NUMBER,
  "FLAG_PHONE" NUMBER,
  "FLAG_EMAIL" NUMBER,
  "OCCUPATION_TYPE" NUMBER,
  "CNT_FAM_MEMBERS" NUMBER,
  "REGION_RATING_CLIENT" NUMBER,
  "REGION_RATING_CLIENT_W_CITY" NUMBER,
  "WEEKDAY_APPR_PROCESS_START" NUMBER,
  "HOUR_APPR_PROCESS_START" NUMBER,
  "REG_REGION_NOT_LIVE_REGION" NUMBER,
  "REG_REGION_NOT_WORK_REGION" NUMBER,
  "LIVE_REGION_NOT_WORK_REGION" NUMBER,
  "REG_CITY_NOT_LIVE_CITY" NUMBER,
  "REG_CITY_NOT_WORK_CITY" NUMBER,
  "LIVE_CITY_NOT_WORK_CITY" NUMBER,
  "ORGANIZATION_TYPE" NUMBER,
  "EXT_SOURCE_1" NUMBER,
  "EXT_SOURCE_2" NUMBER,
  "EXT_SOURCE_3" NUMBER,
  "APARTMENTS_AVG" NUMBER,
  "BASEMENTAREA_AVG" NUMBER,
  "YEARS_BEGINEXPLUATATION_AVG" NUMBER,
  "YEARS_BUILD_AVG" NUMBER,
  "COMMONAREA_AVG" NUMBER,
  "ELEVATORS_AVG" NUMBER,
  "ENTRANCES_AVG" NUMBER,
  "FLOORSMAX_AVG" NUMBER,
  "FLOORSMIN_AVG" NUMBER,
  "LANDAREA_AVG" NUMBER,
  "LIVINGAPARTMENTS_AVG" NUMBER,
  "LIVINGAREA_AVG" NUMBER,
  "NONLIVINGAPARTMENTS_AVG" NUMBER,
  "NONLIVINGAREA_AVG" NUMBER,
  "APARTMENTS_MODE" NUMBER,
  "BASEMENTAREA_MODE" NUMBER,
  "YEARS_BEGINEXPLUATATION_MODE" NUMBER,
  "YEARS_BUILD_MODE" NUMBER,
  "COMMONAREA_MODE" NUMBER,
  "ELEVATORS_MODE" NUMBER,
  "ENTRANCES_MODE" NUMBER,
  "FLOORSMAX_MODE" NUMBER,
  "FLOORSMIN_MODE" NUMBER,
  "LANDAREA_MODE" NUMBER,
  "LIVINGAPARTMENTS_MODE" NUMBER,
  "LIVINGAREA_MODE" NUMBER,
  "NONLIVINGAPARTMENTS_MODE" NUMBER,
  "NONLIVINGAREA_MODE" NUMBER,
  "APARTMENTS_MEDI" NUMBER,
  "BASEMENTAREA_MEDI" NUMBER,
  "YEARS_BEGINEXPLUATATION_MEDI" NUMBER,
  "YEARS_BUILD_MEDI" NUMBER,
  "COMMONAREA_MEDI" NUMBER,
  "ELEVATORS_MEDI" NUMBER,
  "ENTRANCES_MEDI" NUMBER,
  "FLOORSMAX_MEDI" NUMBER,
  "FLOORSMIN_MEDI" NUMBER,
  "LANDAREA_MEDI" NUMBER,
  "LIVINGAPARTMENTS_MEDI" NUMBER,
  "LIVINGAREA_MEDI" NUMBER,
  "NONLIVINGAPARTMENTS_MEDI" NUMBER,
  "NONLIVINGAREA_MEDI" NUMBER,
  "FONDKAPREMONT_MODE" NUMBER,
  "HOUSETYPE_MODE" NUMBER,
  "TOTALAREA_MODE" NUMBER,
  "WALLSMATERIAL_MODE" NUMBER,
  "EMERGENCYSTATE_MODE" NUMBER,
  "OBS_30_CNT_SOCIAL_CIRCLE" NUMBER,
  "DEF_30_CNT_SOCIAL_CIRCLE" NUMBER,
  "OBS_60_CNT_SOCIAL_CIRCLE" NUMBER,
  "DEF_60_CNT_SOCIAL_CIRCLE" NUMBER,
  "DAYS_LAST_PHONE_CHANGE" NUMBER,
  "FLAG_DOCUMENT_2" NUMBER,
  "FLAG_DOCUMENT_3" NUMBER,
  "FLAG_DOCUMENT_4" NUMBER,
  "FLAG_DOCUMENT_5" NUMBER,
  "FLAG_DOCUMENT_6" NUMBER,
  "FLAG_DOCUMENT_7" NUMBER,
  "FLAG_DOCUMENT_8" NUMBER,
  "FLAG_DOCUMENT_9" NUMBER,
  "FLAG_DOCUMENT_10" NUMBER,
  "FLAG_DOCUMENT_11" NUMBER,
  "FLAG_DOCUMENT_12" NUMBER,
  "FLAG_DOCUMENT_13" NUMBER,
  "FLAG_DOCUMENT_14" NUMBER,
  "FLAG_DOCUMENT_15" NUMBER,
  "FLAG_DOCUMENT_16" NUMBER,
  "FLAG_DOCUMENT_17" NUMBER,
  "FLAG_DOCUMENT_18" NUMBER,
  "FLAG_DOCUMENT_19" NUMBER,
  "FLAG_DOCUMENT_20" NUMBER,
  "FLAG_DOCUMENT_21" NUMBER,
  "AMT_REQ_CREDIT_BUREAU_HOUR" NUMBER,
  "AMT_REQ_CREDIT_BUREAU_DAY" NUMBER,
  "AMT_REQ_CREDIT_BUREAU_WEEK" NUMBER,
  "AMT_REQ_CREDIT_BUREAU_MON" NUMBER,
  "AMT_REQ_CREDIT_BUREAU_QRT" NUMBER,
  "AMT_REQ_CREDIT_BUREAU_YEAR" NUMBER
);
insert into train_tb select * from train;
---------------------------------------
.import 'D:\Kaggle\HCDR\all\bureau.csv' bureau
create TABLE bureau_tb (
	`SK_ID_CURR`	TEXT,
	`SK_ID_BUREAU`	TEXT,
	`CREDIT_ACTIVE`	TEXT,
	`CREDIT_CURRENCY`	TEXT,
	`DAYS_CREDIT`	NUMBER,
	`CREDIT_DAY_OVERDUE`	NUMBER,
	`DAYS_CREDIT_ENDDATE`	NUMBER,
	`DAYS_ENDDATE_FACT`	NUMBER,
	`AMT_CREDIT_MAX_OVERDUE`	NUMBER,
	`CNT_CREDIT_PROLONG`	NUMBER,
	`AMT_CREDIT_SUM`	NUMBER,
	`AMT_CREDIT_SUM_DEBT`	NUMBER,
	`AMT_CREDIT_SUM_LIMIT`	NUMBER,
	`AMT_CREDIT_SUM_OVERDUE`	NUMBER,
	`CREDIT_TYPE`	TEXT,
	`DAYS_CREDIT_UPDATE`	NUMBER,
	`AMT_ANNUITY`	TEXT
);

insert into bureau_tb  select * from bureau;
--------------------------------
.import 'D:\Kaggle\HCDR\all\previous_application.csv' pa
CREATE TABLE pa_tb(
  "SK_ID_PREV" NUMBER,
  "SK_ID_CURR" NUMBER,
  "NAME_CONTRACT_TYPE" NUMBER,
  "AMT_ANNUITY" NUMBER,
  "AMT_APPLICATION" NUMBER,
  "AMT_CREDIT" NUMBER,
  "AMT_DOWN_PAYMENT" NUMBER,
  "AMT_GOODS_PRICE" NUMBER,
  "WEEKDAY_APPR_PROCESS_START" NUMBER,
  "HOUR_APPR_PROCESS_START" NUMBER,
  "FLAG_LAST_APPL_PER_CONTRACT" NUMBER,
  "NFLAG_LAST_APPL_IN_DAY" NUMBER,
  "RATE_DOWN_PAYMENT" NUMBER,
  "RATE_INTEREST_PRIMARY" NUMBER,
  "RATE_INTEREST_PRIVILEGED" NUMBER,
  "NAME_CASH_LOAN_PURPOSE" NUMBER,
  "NAME_CONTRACT_STATUS" NUMBER,
  "DAYS_DECISION" NUMBER,
  "NAME_PAYMENT_TYPE" NUMBER,
  "CODE_REJECT_REASON" NUMBER,
  "NAME_TYPE_SUITE" NUMBER,
  "NAME_CLIENT_TYPE" NUMBER,
  "NAME_GOODS_CATEGORY" NUMBER,
  "NAME_PORTFOLIO" NUMBER,
  "NAME_PRODUCT_TYPE" NUMBER,
  "CHANNEL_TYPE" NUMBER,
  "SELLERPLACE_AREA" NUMBER,
  "NAME_SELLER_INDUSTRY" NUMBER,
  "CNT_PAYMENT" NUMBER,
  "NAME_YIELD_GROUP" NUMBER,
  "PRODUCT_COMBINATION" NUMBER,
  "DAYS_FIRST_DRAWING" NUMBER,
  "DAYS_FIRST_DUE" NUMBER,
  "DAYS_LAST_DUE_1ST_VERSION" NUMBER,
  "DAYS_LAST_DUE" NUMBER,
  "DAYS_TERMINATION" NUMBER,
  "NFLAG_INSURED_ON_APPROVAL" NUMBER
);

insert into pa_tb as select * from pa;

---------------------------------
.import 'D:\Kaggle\HCDR\all\POS_CASH_balance.csv' pcb
CREATE TABLE pcb_tb(
  "SK_ID_PREV" TEXT,
  "SK_ID_CURR" TEXT,
  "MONTHS_BALANCE" TEXT,
  "CNT_INSTALMENT" TEXT,
  "CNT_INSTALMENT_FUTURE" TEXT,
  "NAME_CONTRACT_STATUS" TEXT,
  "SK_DPD" TEXT,
  "SK_DPD_DEF" TEXT
);

insert into pcb_tb select * from pcb;
------------------------------------
.import 'D:\Kaggle\HCDR\all\installments_payments.csv' ip
CREATE TABLE ip_tb(
  "SK_ID_PREV" NUMBER,
  "SK_ID_CURR" NUMBER,
  "NUM_INSTALMENT_VERSION" NUMBER,
  "NUM_INSTALMENT_NUMBER" NUMBER,
  "DAYS_INSTALMENT" NUMBER,
  "DAYS_ENTRY_PAYMENT" NUMBER,
  "AMT_INSTALMENT" NUMBER,
  "AMT_PAYMENT" NUMBER
);

insert into ip_tb select * from ip;
--------------------------------------
.import 'D:\Kaggle\HCDR\all\credit_card_balance.csv' ccb

CREATE TABLE ccb_tb(
  "SK_ID_PREV" NUMBER,
  "SK_ID_CURR" NUMBER,
  "MONTHS_BALANCE" NUMBER,
  "AMT_BALANCE" NUMBER,
  "AMT_CREDIT_LIMIT_ACTUAL" NUMBER,
  "AMT_DRAWINGS_ATM_CURRENT" NUMBER,
  "AMT_DRAWINGS_CURRENT" NUMBER,
  "AMT_DRAWINGS_OTHER_CURRENT" NUMBER,
  "AMT_DRAWINGS_POS_CURRENT" NUMBER,
  "AMT_INST_MIN_REGULARITY" NUMBER,
  "AMT_PAYMENT_CURRENT" NUMBER,
  "AMT_PAYMENT_TOTAL_CURRENT" NUMBER,
  "AMT_RECEIVABLE_PRINCIPAL" NUMBER,
  "AMT_RECIVABLE" NUMBER,
  "AMT_TOTAL_RECEIVABLE" NUMBER,
  "CNT_DRAWINGS_ATM_CURRENT" NUMBER,
  "CNT_DRAWINGS_CURRENT" NUMBER,
  "CNT_DRAWINGS_OTHER_CURRENT" NUMBER,
  "CNT_DRAWINGS_POS_CURRENT" NUMBER,
  "CNT_INSTALMENT_MATURE_CUM" NUMBER,
  "NAME_CONTRACT_STATUS" NUMBER,
  "SK_DPD" NUMBER,
  "SK_DPD_DEF" NUMBER
);
insert into  ccb_tb select * from ccb
----------------------------------

CREATE TABLE bureaub_tb(
  "SK_ID_BUREAU" TEXT,
  "MONTHS_BALANCE" TEXT,
  "STATUS" TEXT
);

insert into bureaub_tb select * from bureaub;


--------------------------------------------------------------------
bureau table aggregation 

create table bureauagg1 as
select sum(DAYS_CREDIT) sum1,
       sum(CREDIT_DAY_OVERDUE) sum2,
       sum(DAYS_CREDIT_ENDDATE) sum3,
       sum(DAYS_ENDDATE_FACT) sum4,
       sum(AMT_CREDIT_MAX_OVERDUE) sum5,
       sum(CNT_CREDIT_PROLONG) sum6,
       sum(AMT_CREDIT_SUM) sum7,
       sum(AMT_CREDIT_SUM_DEBT) sum8,
       sum(AMT_CREDIT_SUM_LIMIT) sum9,
       sum(AMT_CREDIT_SUM_OVERDUE) sum10,
       
       avg(DAYS_CREDIT) avg1,
       avg(CREDIT_DAY_OVERDUE) avg2,
       avg(DAYS_CREDIT_ENDDATE) avg3,
       avg(DAYS_ENDDATE_FACT) avg4,
       avg(AMT_CREDIT_MAX_OVERDUE) avg5,
       avg(CNT_CREDIT_PROLONG) avg6,
       avg(AMT_CREDIT_SUM) avg7,
       avg(AMT_CREDIT_SUM_DEBT) avg8,
       avg(AMT_CREDIT_SUM_LIMIT) avg9,
       avg(AMT_CREDIT_SUM_OVERDUE) avg10,


       min(DAYS_CREDIT) min1,
       min(CREDIT_DAY_OVERDUE) min2,
       min(DAYS_CREDIT_ENDDATE) min3,
       min(DAYS_ENDDATE_FACT) min4,
       min(AMT_CREDIT_MAX_OVERDUE) min5,
       min(CNT_CREDIT_PROLONG) min6,
       min(AMT_CREDIT_SUM) min7,
       min(AMT_CREDIT_SUM_DEBT) min8,
       min(AMT_CREDIT_SUM_LIMIT) min9,
       min(AMT_CREDIT_SUM_OVERDUE) min10,

       max(DAYS_CREDIT) max1,
       max(CREDIT_DAY_OVERDUE) max2,
       max(DAYS_CREDIT_ENDDATE) max3,
       max(DAYS_ENDDATE_FACT) max4,
       max(AMT_CREDIT_MAX_OVERDUE) max5,
       max(CNT_CREDIT_PROLONG) max6,
       max(AMT_CREDIT_SUM) max7,
       max(AMT_CREDIT_SUM_DEBT) max8,
       max(AMT_CREDIT_SUM_LIMIT) max9,
       max(AMT_CREDIT_SUM_OVERDUE) max10,
       
       SK_ID_CURR,
       
       CREDIT_ACTIVE , count(*) as num_loans_Active from bureau_tb

 group by SK_ID_CURR, CREDIT_ACTIVE having CREDIT_ACTIVE='Active';


------------------------
create table bureauagg2 as
select sum(DAYS_CREDIT) sum1,
       sum(CREDIT_DAY_OVERDUE) sum2,
       sum(DAYS_CREDIT_ENDDATE) sum3,
       sum(DAYS_ENDDATE_FACT) sum4,
       sum(AMT_CREDIT_MAX_OVERDUE) sum5,
       sum(CNT_CREDIT_PROLONG) sum6,
       sum(AMT_CREDIT_SUM) sum7,
       sum(AMT_CREDIT_SUM_DEBT) sum8,
       sum(AMT_CREDIT_SUM_LIMIT) sum9,
       sum(AMT_CREDIT_SUM_OVERDUE) sum10,
       
       avg(DAYS_CREDIT) avg1,
       avg(CREDIT_DAY_OVERDUE) avg2,
       avg(DAYS_CREDIT_ENDDATE) avg3,
       avg(DAYS_ENDDATE_FACT) avg4,
       avg(AMT_CREDIT_MAX_OVERDUE) avg5,
       avg(CNT_CREDIT_PROLONG) avg6,
       avg(AMT_CREDIT_SUM) avg7,
       avg(AMT_CREDIT_SUM_DEBT) avg8,
       avg(AMT_CREDIT_SUM_LIMIT) avg9,
       avg(AMT_CREDIT_SUM_OVERDUE) avg10,


       min(DAYS_CREDIT) min1,
       min(CREDIT_DAY_OVERDUE) min2,
       min(DAYS_CREDIT_ENDDATE) min3,
       min(DAYS_ENDDATE_FACT) min4,
       min(AMT_CREDIT_MAX_OVERDUE) min5,
       min(CNT_CREDIT_PROLONG) min6,
       min(AMT_CREDIT_SUM) min7,
       min(AMT_CREDIT_SUM_DEBT) min8,
       min(AMT_CREDIT_SUM_LIMIT) min9,
       min(AMT_CREDIT_SUM_OVERDUE) min10,

       max(DAYS_CREDIT) max1,
       max(CREDIT_DAY_OVERDUE) max2,
       max(DAYS_CREDIT_ENDDATE) max3,
       max(DAYS_ENDDATE_FACT) max4,
       max(AMT_CREDIT_MAX_OVERDUE) max5,
       max(CNT_CREDIT_PROLONG) max6,
       max(AMT_CREDIT_SUM) max7,
       max(AMT_CREDIT_SUM_DEBT) max8,
       max(AMT_CREDIT_SUM_LIMIT) max9,
       max(AMT_CREDIT_SUM_OVERDUE) max10,
       
       SK_ID_CURR,
       
       CREDIT_ACTIVE , count(*) as num_loans_Closed  from bureau_tb

 group by SK_ID_CURR, CREDIT_ACTIVE having CREDIT_ACTIVE='Closed';
-----------------------------
Do inner Join bureauagg1 and bureauagg2 
-----------------------------
create table bureagg as select * from bureauagg1 left outer join bureauagg2 on bureauagg1.SK_ID_CURR=bureauagg2.SK_ID_CURR;

#Load train_data and test_data and blend with buregg
.import 'D:\Kaggle\HCDR\all\train_data.csv' traindata
.import 'D:\Kaggle\HCDR\all\test_data.csv' testdata

create table traindata_blend as select * from traindata left join bureagg on bureagg.SK_ID_CURR=traindata.SK_ID_CURR;
create table testdata_blend as select * from testdata left join bureagg on bureagg.SK_ID_CURR=testdata.SK_ID_CURR;

#export data to workspace
.output newtrain.csv
select * from traindata_blend;

.output newtest.csv
select * from testdata_blend;
.output stdout
